<link rel="stylesheet" href="/mathquill/mathquill.css" />
<link rel="stylesheet" type="text/css"
  href="/app-assets/css/pages/app-file-manager.min.css">
<style>
 .fontt{ 
      width: 100%;
      height: 10px;
      background-color: rgb(85, 27, 160); 
    }
</style>
{{#if quizz}}
{{#each quizz}}
<div class="row">
  <div class="content-wrapper-before blue-grey lighten-5"></div>
  <div class="col s12">
    <div class="container">
      <div class="col s12 m6 l8">
        <div id="placeholder" class="card card card-default scrollspy">
          <div class="card-content">
            <h4 class="center">{{nom_cue}}</h4>
            <div class="fontt"></div>
            <form name="questions" id="questions" method="POST"
              action="/web/resultadosQuizz">
              {{#each questions}}
              <div>
                <div class="input-field col s12" style="margin-bottom: 0px;">
                  <p class="flow-text"><h5 class="card-title"><span
                        class="mathquillEstatic">{{con_pre}}</span></h5></p>
                </div>
              </div>
              <div class="row center">
                <div class="col s10">
                  <p>
                    <label>
                      <input class="with-gap" name="group{{id_bpr}}"
                        type="radio" value="a" />
                      <span class="left"><span class="mathquillEstatic"> a) {{opc_a}}</span></span>
                    </label>
                  </p>
                  <p>
                    <label>
                      <input class="with-gap" name="group{{id_bpr}}"
                        type="radio" value="b" />
                      <span class="right"><span class="mathquillEstatic"> b) {{opc_b}}</span></span>
                    </label>
                  </p>
                </div>
                <div class="col s10">
                  <p>
                    <label>
                      <input class="with-gap" name="group{{id_bpr}}"
                        type="radio" value="c" />
                      <span class="left"><span class="mathquillEstatic"> c) {{opc_c}}</span></span>
                    </label>
                  </p>
                  <p>
                    <label>
                      <input class="with-gap" name="group{{id_bpr}}"
                        type="radio" value="d" />
                      <span class="right"><span class="mathquillEstatic"> d) {{opc_d}}</span></span>
                    </label>
                  </p>
                </div>
              </div>
              {{/each}}
              <br>
              <div class="row">
                <button class="btn-small waves-effect waves-light
                  gradient-45deg-deep-purple-blue" type="submit">Enviar
                  respuestas
                  <i class="material-icons right">send</i>
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>

    </div>
    <div class="col s12 m6 l4">
      <br>
      <div class="card card card-default scrollspy">
        <div class="crono_wrapper">
          <h2 id='crono'>00:00:00</h2>
        </div>

      </div>
    </div>
  </div>

</div>
{{/each}}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="/mathquill/mathquill.js"></script>
<script>
var MQ = MathQuill.getInterface(2); // for backcompat

let contenidoPregunta = document.getElementsByClassName('mathquillEstatic');
console.log(contenidoPregunta.length);
for(let index = 0; index < contenidoPregunta.length; index++) {
    MQ.StaticMath(contenidoPregunta.item(index));
}
</script>
<script>
var inicio=0;
	var timeout=0;
  
	window.onload = function (elemento)
	{
		if(timeout==0)
		{
			elemento.value="Detener";
			inicio=vuelta=new Date().getTime();
			funcionando();
		}else{
			elemento.value="Empezar";
			clearTimeout(timeout);
			timeout=0;
		}
	}
 
	function funcionando()
	{
		var actual = new Date().getTime();
		var diff=new Date(actual-inicio);
		var result=LeadingZero(diff.getUTCHours())+":"+LeadingZero(diff.getUTCMinutes())+":"+LeadingZero(diff.getUTCSeconds());
		document.getElementById('crono').innerHTML = result;
		timeout=setTimeout("funcionando()",1000);
	}

	function LeadingZero(Time) {
		return (Time < 10) ? "0" + Time : + Time;
	}

</script>

{{/if}}
